/*
 * Secret Server
 *
 * This is an API of a secret service. You can save your secret by using the API. You can restrict the access of a secret after the certen number of views or after a certen period of time.
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// muxRoute struct to populate routes
type muxRoute struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type muxRoutes []muxRoute

var routes = muxRoutes{
	muxRoute{
		"Index",
		"GET",
		"/",
		Index,
	},

	muxRoute{
		"AddSecret",
		strings.ToUpper("Post"),
		"/v1/secret",
		AddSecret,
	},

	muxRoute{
		"GetSecretByHash",
		strings.ToUpper("Get"),
		"/v1/secret/{hash}",
		GetSecretByHash,
	},
}

// NewRouter populates mandatory routes and provides less copy-pasting.
func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	router.PathPrefix("/assets/").Methods("GET").Handler(http.StripPrefix("/assets/", http.FileServer(http.Dir("./assets"))))

	return router
}
